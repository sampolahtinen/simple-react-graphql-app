{"ast":null,"code":"import _classCallCheck from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sampo/Documents/Web/simple-react-graphql-app/src/components/BonusList/BonusList.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport _uniqWith from \"lodash.uniqwith\";\nimport _isEqual from \"lodash.isequal\";\nimport Person from \"../../components/PersonsList/Person\";\nvar propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\nvar defaultProps = {\n  className: \"\"\n};\n\nvar BonusList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BonusList, _Component);\n\n  function BonusList(props) {\n    var _this;\n\n    _classCallCheck(this, BonusList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BonusList).call(this, props));\n    _this.state = {\n      bonusList: []\n    };\n    _this.generateList = _this.generateList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BonusList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.data;\n      this.generateList(data);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        bonusList: []\n      });\n    } // Display the list of humans who played with this person in at least two consecutive movies,\n    // with the links leading to their profile pages.\n\n  }, {\n    key: \"generateList\",\n    value: function generateList(films) {\n      var profileName = this.props.profileName;\n      var charArr = [];\n      films.forEach(function (film, filmIndex) {\n        // Take first film in the list and begin looping over its' characters\n        film.characters.forEach(function (person1, personIndex1) {\n          // filmIndex + 1 indicates, that the characters of\n          // the next film will be evaluated (\"at least two consecutive movies\" requirement)\n          if (filmIndex + 1 < films.length) {\n            // Loop over characters of the next film in the list\n            // If a character in this film matches with the parent character\n            // push it to charArr\n            // If there is no match, jump to next character.\n            films[filmIndex + 1].characters.forEach(function (person2) {\n              if (person2.name === person1.name && person2.name !== profileName) {\n                charArr.push(person1);\n              }\n            });\n          }\n        });\n      });\n      this.setState({\n        bonusList: _uniqWith(charArr, _isEqual)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = this.props.className;\n      var bonusList = this.state.bonusList;\n      var classes = classNames(className);\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, bonusList.map(function (person, index) {\n        return React.createElement(Person, {\n          key: person.id,\n          className: classes,\n          person: person,\n          appearDelay: index / 10,\n          enableDispatch: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return BonusList;\n}(Component);\n\nBonusList.propTypes = propTypes;\nBonusList.defaultProps = defaultProps;\nexport default withRouter(BonusList);","map":{"version":3,"sources":["/Users/Sampo/Documents/Web/simple-react-graphql-app/src/components/BonusList/BonusList.jsx"],"names":["React","Component","withRouter","PropTypes","classNames","_uniqWith","_isEqual","Person","propTypes","className","string","data","array","isRequired","defaultProps","BonusList","props","state","bonusList","generateList","bind","setState","films","profileName","charArr","forEach","film","filmIndex","characters","person1","personIndex1","length","person2","name","push","classes","map","person","index","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport _uniqWith from \"lodash.uniqwith\";\nimport _isEqual from \"lodash.isequal\";\nimport Person from \"../../components/PersonsList/Person\";\n\nconst propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nconst defaultProps = {\n  className: \"\"\n};\n\nclass BonusList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bonusList: []\n    };\n    this.generateList = this.generateList.bind(this);\n  }\n\n  componentDidMount() {\n    const { data } = this.props;\n    this.generateList(data);\n  }\n\n  componentWillUnmount() {\n    this.setState({ bonusList: [] });\n  }\n\n  // Display the list of humans who played with this person in at least two consecutive movies,\n  // with the links leading to their profile pages.\n  generateList(films) {\n    const { profileName } = this.props;\n\n    let charArr = [];\n    films.forEach((film, filmIndex) => {\n      // Take first film in the list and begin looping over its' characters\n      film.characters.forEach((person1, personIndex1) => {\n        // filmIndex + 1 indicates, that the characters of\n        // the next film will be evaluated (\"at least two consecutive movies\" requirement)\n        if (filmIndex + 1 < films.length) {\n          // Loop over characters of the next film in the list\n          // If a character in this film matches with the parent character\n          // push it to charArr\n          // If there is no match, jump to next character.\n          films[filmIndex + 1].characters.forEach(person2 => {\n            if (person2.name === person1.name && person2.name !== profileName) {\n              charArr.push(person1);\n            }\n          });\n        }\n      });\n    });\n    this.setState({ bonusList: _uniqWith(charArr, _isEqual) });\n  }\n\n  render() {\n    const { className } = this.props;\n    const { bonusList } = this.state;\n    const classes = classNames(className);\n    return (\n      <ul>\n        {bonusList.map((person, index) => (\n          <Person\n            key={person.id}\n            className={classes}\n            person={person}\n            appearDelay={index / 10}\n            enableDispatch\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nBonusList.propTypes = propTypes;\nBonusList.defaultProps = defaultProps;\n\nexport default withRouter(BonusList);\n"]},"metadata":{},"sourceType":"module"}