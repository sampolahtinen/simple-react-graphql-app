{"ast":null,"code":"var _jsxFileName = \"/Users/Sampo/Documents/Web/simple-react-graphql-app/src/pages/ProfilePage/ProfilePage.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport MaterialIcon from \"material-icons-react\";\nimport { Query } from \"react-apollo\";\nimport PropTypes from \"prop-types\";\nimport { GET_PERSON_DETAILS } from \"../../api/queries.js\";\nimport { default as PersonComponent } from \"../../components/PersonsList/Person\";\nimport List from \"../../components/List\";\nimport \"./ProfilePage.css\";\nvar propTypes = {\n  match: PropTypes.object\n};\nvar defaultProps = {\n  match: undefined\n};\nvar color = \"#9c9ca4\";\n\nvar ProfilePage = function ProfilePage(_ref) {\n  var match = _ref.match;\n  return React.createElement(Query, {\n    query: GET_PERSON_DETAILS,\n    variables: {\n      id: match.params.id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (data, loading, error, networkStatus) {\n    if (loading && networkStatus !== 3) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    if (error) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, error);\n    }\n\n    var Person = data.data.Person;\n\n    if (Person) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"profile-page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, Person.name), React.createElement(\"div\", {\n        className: \"profile-details-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"profile-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, Person.gender), React.createElement(MaterialIcon, {\n        icon: \"crop_square\",\n        size: \"tiny\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"profile-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, Person.height, \" cm\"), React.createElement(MaterialIcon, {\n        icon: \"crop_square\",\n        size: \"tiny\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"profile-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, Person.mass, \" kg\"), React.createElement(MaterialIcon, {\n        icon: \"crop_square\",\n        size: \"tiny\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"profile-detail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, Person.birthYear)), React.createElement(\"div\", {\n        className: \"profile-page-body-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"profile-page-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Films\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, Person.films.map(function (film) {\n        return React.createElement(\"li\", {\n          key: film.id,\n          className: \"profile-page-film\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, film.title);\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"profile-page-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Bonus list\"), React.createElement(List, {\n        className: \"profile-page-list-name\",\n        profileName: Person.name,\n        data: Person.films,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })))));\n    }\n\n    return null;\n  });\n};\n\nProfilePage.propTypes = propTypes;\nProfilePage.defaultProps = defaultProps;\nexport default ProfilePage;","map":{"version":3,"sources":["/Users/Sampo/Documents/Web/simple-react-graphql-app/src/pages/ProfilePage/ProfilePage.jsx"],"names":["React","Component","Fragment","MaterialIcon","Query","PropTypes","GET_PERSON_DETAILS","default","PersonComponent","List","propTypes","match","object","defaultProps","undefined","color","ProfilePage","id","params","data","loading","error","networkStatus","Person","name","gender","height","mass","birthYear","films","map","film","title"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport MaterialIcon from \"material-icons-react\";\nimport { Query } from \"react-apollo\";\nimport PropTypes from \"prop-types\";\nimport { GET_PERSON_DETAILS } from \"../../api/queries.js\";\nimport { default as PersonComponent } from \"../../components/PersonsList/Person\";\nimport List from \"../../components/List\";\n\nimport \"./ProfilePage.css\";\n\nconst propTypes = {\n  match: PropTypes.object\n};\n\nconst defaultProps = {\n  match: undefined\n};\n\nconst color = \"#9c9ca4\";\n\nconst ProfilePage = ({ match }) => {\n  return (\n    <Query query={GET_PERSON_DETAILS} variables={{ id: match.params.id }}>\n      {(data, loading, error, networkStatus) => {\n        if (loading && networkStatus !== 3) {\n          return <span>Loading...</span>;\n        }\n\n        if (error) {\n          return <span>{error}</span>;\n        }\n\n        const { Person } = data.data;\n\n        if (Person) {\n          return (\n            <Fragment>\n              <div className=\"profile-page\">\n                <h2 className=\"profile-page-title\">{Person.name}</h2>\n                <div className=\"profile-details-wrapper\">\n                  <span className=\"profile-detail\">{Person.gender}</span>\n                  <MaterialIcon icon=\"crop_square\" size=\"tiny\" color={color} />\n                  <span className=\"profile-detail\">{Person.height} cm</span>\n                  <MaterialIcon icon=\"crop_square\" size=\"tiny\" color={color} />\n                  <span className=\"profile-detail\">{Person.mass} kg</span>\n                  <MaterialIcon icon=\"crop_square\" size=\"tiny\" color={color} />\n                  <span className=\"profile-detail\">{Person.birthYear}</span>\n                </div>\n                <div className=\"profile-page-body-container\">\n                  <div>\n                    <h3 className=\"profile-page-subtitle\">Films</h3>\n                    <ul>\n                      {Person.films.map(film => (\n                        <li key={film.id} className=\"profile-page-film\">\n                          {film.title}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h3 className=\"profile-page-subtitle\">Bonus list</h3>\n                    <List\n                      className=\"profile-page-list-name\"\n                      profileName={Person.name}\n                      data={Person.films}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Fragment>\n          );\n        }\n        return null;\n      }}\n    </Query>\n  );\n};\n\nProfilePage.propTypes = propTypes;\nProfilePage.defaultProps = defaultProps;\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}