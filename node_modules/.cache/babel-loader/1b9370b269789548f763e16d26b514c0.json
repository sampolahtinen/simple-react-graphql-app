{"ast":null,"code":"import _toConsumableArray from \"/Users/Sampo/Documents/Web/simple-react-graphql-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_HISTORY } from \"./actions\";\nimport _uniqWith from \"lodash.uniqwith\";\nimport _isEqual from \"lodash.isequal\";\nvar initialState = {\n  visitedPersons: []\n};\n\nfunction nextVisitedPersons(prevState, nextPerson) {\n  var personsArray = _toConsumableArray(prevState.visitedPersons).concat([{\n    person: nextPerson\n  }]);\n\n  return _uniqWith(personsArray, _isEqual);\n}\n\nfunction visitedPersons() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_HISTORY:\n      return Object.assign({}, state, {\n        visitedPersons: nextVisitedPersons(state, action.person)\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default visitedPersons;","map":{"version":3,"sources":["/Users/Sampo/Documents/Web/simple-react-graphql-app/src/redux/reducers.js"],"names":["ADD_HISTORY","_uniqWith","_isEqual","initialState","visitedPersons","nextVisitedPersons","prevState","nextPerson","personsArray","person","state","action","type","Object","assign"],"mappings":";AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AADG,CAArB;;AAIA,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,UAAvC,EAAmD;AACjD,MAAMC,YAAY,sBAAOF,SAAS,CAACF,cAAjB,UAAiC;AAAEK,IAAAA,MAAM,EAAEF;AAAV,GAAjC,EAAlB;;AACA,SAAON,SAAS,CAACO,YAAD,EAAeN,QAAf,CAAhB;AACD;;AAED,SAASE,cAAT,GAAsD;AAAA,MAA9BM,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAL;AACE,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BN,QAAAA,cAAc,EAAEC,kBAAkB,CAACK,KAAD,EAAQC,MAAM,CAACF,MAAf;AADJ,OAAzB,CAAP;;AAGF;AACE,aAAOC,KAAP;AANJ;AAQD;;AAED,eAAeN,cAAf","sourcesContent":["import { ADD_HISTORY } from \"./actions\";\nimport _uniqWith from \"lodash.uniqwith\";\nimport _isEqual from \"lodash.isequal\";\n\nconst initialState = {\n  visitedPersons: []\n};\n\nfunction nextVisitedPersons(prevState, nextPerson) {\n  const personsArray = [...prevState.visitedPersons, { person: nextPerson }];\n  return _uniqWith(personsArray, _isEqual);\n}\n\nfunction visitedPersons(state = initialState, action) {\n  switch (action.type) {\n    case ADD_HISTORY:\n      return Object.assign({}, state, {\n        visitedPersons: nextVisitedPersons(state, action.person)\n      });\n    default:\n      return state;\n  }\n}\n\nexport default visitedPersons;\n"]},"metadata":{},"sourceType":"module"}